{"version":3,"file":"static/js/990.afba2dde.chunk.js","mappings":"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","sources":["Pages/Search/FilterByCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProductCard from \"../../components/UIElement/ProductCard\";\r\nimport Loader from '../../components/UIElement/Loader';\r\nimport SearchBanner from '../../assets/background/SearchBanner.png'\r\nimport { faMagnifyingGlassPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport './FilterByCategory.css';\r\nimport './SearchResultPage.css';\r\nimport axios from \"axios\";\r\nconst FilterByCategory = () => {\r\n    const navigate = useNavigate();\r\n    const { category, brand, minp, maxp, page } = useParams();\r\n    const [items, setItem] = useState([]);\r\n    const [brands, setBrand] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [flag, setFlag] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [selectedBrand, setSelectedBrand] = useState(null);\r\n    const [minPrice, setMinPrice] = useState(null);\r\n    const [maxPrice, setMaxPrice] = useState(null);\r\n    const [maxItem, setMaxItem] = useState(null);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [selectedPage, setSelectedPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_BACKEND_URL}/product/get-all-product/?category=${category}&brand=${brand}&min=${minp}&max=${maxp}&page=${page}`)\r\n            .then(result => {\r\n                setItem(result.data.result);\r\n                setMaxItem(result.data.maxLength);\r\n                const calculatedTotalPages = Math.ceil(result.data.maxLength / 12);\r\n                setTotalPages(calculatedTotalPages);\r\n                axios.get(`${process.env.REACT_APP_BACKEND_URL}/brand/get-brand-cate/${category}`)\r\n                    .then(success => {\r\n                        setBrand(success.data);\r\n                        setSelectedCategory(category);\r\n                        setSelectedBrand(brand);\r\n                        setMaxPrice(maxp);\r\n                        setMinPrice(minp)\r\n                    })\r\n                    .catch(err => {\r\n                        toast(err);\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            })\r\n    }, [flag])\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_BACKEND_URL}/category/get-category`)\r\n            .then(result => {\r\n                setCategories(result.data);\r\n            })\r\n            .catch(err => {\r\n                alert('Có lỗi khi hiển thị');\r\n            })\r\n    }, [])\r\n    const handleSelectCategory = (categoryName) => {\r\n        setSelectedCategory(categoryName);\r\n        setSelectedBrand(null);\r\n        setMinPrice(null);\r\n        setMaxPrice(null);\r\n        setSelectedPage(1);\r\n        navigate(`/loctheodanhmuc/${categoryName}/All/0/0/1`);\r\n        setFlag(!flag);\r\n    }\r\n    const handleSelectBrand = (brandName) => {\r\n        setSelectedBrand(brandName);\r\n        navigate(`/loctheodanhmuc/${selectedCategory}/${brandName}/0/0/1`);\r\n        setMinPrice(null);\r\n        setMaxPrice(null);\r\n        setSelectedPage(1);\r\n        setFlag(!flag);\r\n    }\r\n    const handleSelectPrice = (valueMin, valueMax) => {\r\n        setMinPrice(valueMin);\r\n        setMaxPrice(valueMax)\r\n        setSelectedPage(1);\r\n        navigate(`/loctheodanhmuc/${selectedCategory}/${selectedBrand}/${valueMin}/${valueMax}/1`);\r\n        setFlag(!flag);\r\n    }\r\n    const handleSelectPage = (page) => {\r\n        navigate(`/loctheodanhmuc/${selectedCategory}/${selectedBrand}/${minPrice}/${maxPrice}/${page}`);\r\n        setFlag(!flag);\r\n    }\r\n\r\n    return (\r\n        <div className='search-page'>\r\n            <ToastContainer />\r\n            <div className='search-page-container'>\r\n                <div className=\"left-container\">\r\n                    <h2>Bộ lọc sản phẩm</h2>\r\n                    <div className=\"search-by-category\">\r\n                        <p className='filter-title'>Danh mục</p>\r\n                        <ul>\r\n                            {categories.map(category => (\r\n                                <li key={category._id}\r\n                                    onClick={() => handleSelectCategory(category.name)}\r\n                                    className={selectedCategory === category.name ? 'selected' : ''}\r\n                                    value={category._id}>{category.name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"search-by-category\">\r\n                        <p className='filter-title'>Thương hiệu</p>\r\n                        <ul>\r\n                            <li\r\n                                onClick={() => handleSelectBrand(\"All\")}\r\n                                className={selectedBrand === \"All\" ? 'selected' : ''}\r\n                                value=\"All\">Tất cả</li>\r\n                            {brands.map(brand => (\r\n                                <li key={brand._id}\r\n                                    onClick={() => handleSelectBrand(brand.name)}\r\n                                    className={selectedBrand === brand.name ? 'selected' : ''}\r\n                                    value={brand._id}>{brand.name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"search-by-category\">\r\n                        <p className='filter-title'>Giá bán</p>\r\n                        <ul>\r\n                            <li>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"price-all\"\r\n                                    checked={minPrice == 0 && maxPrice == 0}\r\n                                    onChange={() => handleSelectPrice(0, 0)}\r\n                                />\r\n                                <label htmlFor=\"price-all\">Tất cả</label>\r\n                            </li>\r\n                            <li>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"price-under-10m\"\r\n                                    checked={minPrice == 0 && maxPrice == 10000000}\r\n                                    onChange={() => handleSelectPrice(0, 10000000)}\r\n                                />\r\n                                <label htmlFor=\"price-under-10m\">Dưới 10 triệu</label>\r\n                            </li>\r\n                            <li>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"price-10m-to-15m\"\r\n                                    checked={minPrice == 10000000 && maxPrice == 15000000}\r\n                                    onChange={() => handleSelectPrice(10000000, 15000000)}\r\n                                />\r\n                                <label htmlFor=\"price-10m-to-15m\">Từ 10 tới 15 triệu</label>\r\n                            </li>\r\n                            <li>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"price-over-15m\"\r\n                                    checked={minPrice == 15000000 && maxPrice == 9999999999999999}\r\n                                    onChange={() => handleSelectPrice(15000000, 9999999999999999)}\r\n                                />\r\n                                <label htmlFor=\"price-over-15m\">Trên 15 triệu</label>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <h1>{category} - {brand === \"All\" ? \"Tất cả\" : brand}</h1>\r\n                    {items ? (\r\n                        items.length > 0 ? (\r\n                            <div className=\"search-results\">\r\n                                {items.map(item => (\r\n                                    <div className='custom-product-card' key={item._id}>\r\n                                        <ProductCard\r\n                                            key={item._id}\r\n                                            id={item._id}\r\n                                            name={item.name}\r\n                                            price={item.sellPrice}\r\n                                            avgRating={item.avgRating}\r\n                                            numOfReview={item.numOfReview}\r\n                                            image={item.pimage[0]}\r\n                                            voucher={item.voucher} />\r\n                                    </div>))}\r\n                            </div>\r\n                        ) : (\r\n                            <div className='product-not-found'>\r\n                                <div className='icon-container'>\r\n                                    <FontAwesomeIcon className='magnify-glass-icon' icon={faMagnifyingGlassPlus} />\r\n                                </div>\r\n                                <p>Không có sản phẩm phù hợp</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Loader />\r\n                    )}\r\n                    <div className=\"pages\">\r\n                        <ul className=\"pages-bar\">\r\n                            {/* Render danh sách các trang */}\r\n                            {Array.from({ length: totalPages }, (_, index) => (\r\n                                <li className={selectedPage === index + 1 ? \"selected\" : ''} key={index + 1} onClick={() => {\r\n                                    handleSelectPage(index + 1);\r\n                                    setSelectedPage(index + 1);\r\n                                }}>\r\n                                    {index + 1}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterByCategory;"],"names":["navigate","useNavigate","_useParams","useParams","category","brand","minp","maxp","page","_useState","useState","_useState2","_slicedToArray","items","setItem","_useState3","_useState4","brands","setBrand","_useState5","_useState6","categories","setCategories","_useState7","_useState8","flag","setFlag","_useState9","_useState10","selectedCategory","setSelectedCategory","_useState11","_useState12","selectedBrand","setSelectedBrand","_useState13","_useState14","minPrice","setMinPrice","_useState15","_useState16","maxPrice","setMaxPrice","_useState17","_useState18","setMaxItem","_useState19","_useState20","totalPages","setTotalPages","_useState21","_useState22","selectedPage","setSelectedPage","useEffect","axios","get","concat","process","then","result","data","maxLength","calculatedTotalPages","Math","ceil","success","catch","err","toast","alert","handleSelectBrand","brandName","handleSelectPrice","valueMin","valueMax","_jsxs","className","children","_jsx","ToastContainer","map","onClick","categoryName","name","value","_id","type","id","checked","onChange","htmlFor","length","item","ProductCard","price","sellPrice","avgRating","numOfReview","image","pimage","voucher","FontAwesomeIcon","icon","faMagnifyingGlassPlus","Loader","Array","from","_","index","handleSelectPage"],"sourceRoot":""}